@tailwind base;
@tailwind components;
@tailwind utilities;

/* Accessibility styles */
.user-is-tabbing *:focus {
    outline: 2px solid #4f46e5 !important;
    outline-offset: 2px !important;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Skip to main content */
.skip-to-content {
    position: absolute;
    top: -40px;
    left: 0;
    padding: 8px;
    z-index: 100;
    background: white;
    color: black;
    transition: top 0.2s;
}

.skip-to-content:focus {
    top: 0;
}

/* Add any custom styles below */
body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
}

@layer utilities {
    .circular-text {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .circular-text span {
        position: absolute;
        font-family: var(--font-mono);
        font-size: clamp(16px, 2vw, 22px);
        font-weight: 500;
        text-transform: uppercase;
        white-space: nowrap;
        color: #000000;
        letter-spacing: 0.1em;
    }

    .outer-ring span {
        font-size: clamp(18px, 2vw, 24px);
        font-weight: 500;
    }

    .inner-ring span {
        font-size: clamp(16px, 1.8vw, 22px);
        font-weight: 500;
    }

    .outer-text span {
        font-size: clamp(24px, 2.5vw, 32px);
        font-weight: 600;
        color: theme('colors.neutral.900');
        letter-spacing: 0.15em;
        text-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .inner-text span {
        font-size: clamp(18px, 2vw, 24px);
        font-weight: 500;
        color: theme('colors.neutral.700');
        letter-spacing: 0.12em;
        text-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    @media (prefers-color-scheme: dark) {
        .outer-text span {
            color: theme('colors.white');
            text-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
        }
        .inner-text span {
            color: theme('colors.neutral.300');
            text-shadow: 0 0 15px rgba(255, 255, 255, 0.1);
        }
    }

    .circular-text .char {
        font-family: var(--font-mono);
        text-transform: uppercase;
        color: white;
        mix-blend-mode: difference;
        font-weight: 600;
        text-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
    }

    .outer-circle span {
        font-size: clamp(16px, 1.8vw, 22px);
        font-weight: 600;
    }

    .inner-circle span {
        font-size: clamp(14px, 1.6vw, 20px);
        font-weight: 500;
    }

    .outer-circle .char {
        font-size: clamp(18px, 2vw, 24px);
        letter-spacing: 0.15em;
    }

    .inner-circle .char {
        font-size: clamp(16px, 1.8vw, 20px);
        letter-spacing: 0.1em;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px) rotate(var(--rotation));
            filter: blur(4px);
        }
        to {
            opacity: 1;
            transform: translateY(0) rotate(var(--rotation));
            filter: blur(0);
        }
    }

    .circular-text::after {
        content: '';
        position: absolute;
        inset: -2px;
        border-radius: 50%;
        background: linear-gradient(45deg, rgba(0, 0, 0, 0.1), transparent);
        opacity: 0.5;
        pointer-events: none;
    }

    .circular-text .char-wrapper {
        opacity: 0;
        animation: fadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .circular-text::before {
        content: '';
        position: absolute;
        inset: -1px;
        border-radius: 50%;
        padding: 1px;
        background: linear-gradient(
            45deg,
            rgba(255, 255, 255, 0.1),
            rgba(255, 255, 255, 0.2)
        );
        mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
        -webkit-mask: linear-gradient(#000 0 0) content-box,
            linear-gradient(#000 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
    }

    .outer-circle {
        filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.1));
    }

    .inner-circle {
        filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.1));
    }

    @keyframes textFadeInOut {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0;
        }
    }

    .circular-text span.transitioning {
        animation: textFadeInOut 0.5s ease-in-out;
    }

    .circular-text div {
        position: absolute;
        width: 20px;
        transform-origin: bottom center;
    }

    .outer-circle div {
        height: 250px; /* Match with radius in component */
    }

    .inner-circle div {
        height: 180px; /* Match with radius in component */
    }

    /* Smooth text transition */
    @keyframes textFadeInOut {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0;
        }
    }

    .circular-text div.transitioning {
        animation: textFadeInOut 0.5s ease-in-out;
    }

    .circular-text span:hover {
        color: theme('colors.blue.500');
        text-shadow: 0 0 5px theme('colors.blue.200');
    }

    @media (min-width: 768px) {
        .circular-text span {
            font-size: 18px;
        }
    }

    @keyframes fadeInOut {
        0%,
        100% {
            opacity: 1;
            filter: blur(0);
        }
        50% {
            opacity: 0.9;
            filter: blur(0.5px);
        }
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: rotate(var(--rotation)) translateY(-10px);
        }
        to {
            opacity: 1;
            transform: rotate(var(--rotation)) translateY(0);
        }
    }

    .outer-circle::before,
    .inner-circle::before {
        content: '';
        position: absolute;
        inset: -1px;
        border-radius: 50%;
        padding: 1px;
        background: linear-gradient(
            45deg,
            rgba(0, 0, 0, 0.1),
            rgba(255, 255, 255, 0.1)
        );
        -webkit-mask: linear-gradient(#000 0 0) content-box,
            linear-gradient(#000 0 0);
        mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
    }
}
